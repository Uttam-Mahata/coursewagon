name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:

env:
  PROJECT_ID: mitra-348d9
  SERVICE_NAME: coursewagon-api
  REGION: us-central1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Only run if it's a push to main OR a merged pull request to main
    if: |
      (github.event_name == 'push') ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'workflow_dispatch')
    
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Check for Python server changes
      id: changes
      run: |
        echo "Force deploy for testing - deploying"
        echo "deploy=true" >> $GITHUB_OUTPUT

    - name: Authenticate to Google Cloud
      if: steps.changes.outputs.deploy == 'true'
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      if: steps.changes.outputs.deploy == 'true'
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure Docker for Google Container Registry
      if: steps.changes.outputs.deploy == 'true'
      run: |
        gcloud auth configure-docker gcr.io

    - name: Build Docker image
      if: steps.changes.outputs.deploy == 'true'
      run: |
        cd python-server
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .

    - name: Push Docker image
      if: steps.changes.outputs.deploy == 'true'
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}

    - name: Deploy to Cloud Run
      if: steps.changes.outputs.deploy == 'true'
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image=gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
          --platform=managed \
          --region=$REGION \
          --allow-unauthenticated \
          --port=8000 \
          --memory=2Gi \
          --cpu=2 \
          --max-instances=10 \
          --min-instances=1 \
          --timeout=3600 \
          --concurrency=80 \
          --vpc-connector=coursewagon-connector \
          --vpc-egress=private-ranges-only \
          --set-env-vars="FIREBASE_ADMIN_SDK_PATH=/etc/secrets/firebase/admin-sdk.json" \
          --set-secrets="/etc/secrets/firebase/admin-sdk.json=COURSEWAGON-FIREBASE-ADMIN-JSON:latest,SECRET_KEY=COURSEWAGON-SECRET_KEY:latest,DB_HOST=COURSEWAGON-DB_HOST:latest,DB_USER=COURSEWAGON-DB_USER:latest,DB_PASS=COURSEWAGON-DB_PASS:latest,DB_NAME=COURSEWAGON-DB_NAME:latest,DB_PORT=COURSEWAGON-DB_PORT:latest,DATABASE_URL=COURSEWAGON-DATABASE_URL:latest,JWT_SECRET_KEY=COURSEWAGON-JWT_SECRET_KEY:latest,JWT_ACCESS_TOKEN_EXPIRES_HOURS=COURSEWAGON-JWT_ACCESS_TOKEN_EXPIRES_HOURS:latest,JWT_REFRESH_TOKEN_EXPIRES_DAYS=COURSEWAGON-JWT_REFRESH_TOKEN_EXPIRES_DAYS:latest,MAIL_USERNAME=COURSEWAGON-MAIL_USERNAME:latest,MAIL_PASSWORD=COURSEWAGON-MAIL_PASSWORD:latest,MAIL_SERVER=COURSEWAGON-MAIL_SERVER:latest,MAIL_PORT=COURSEWAGON-MAIL_PORT:latest,MAIL_USE_TLS=COURSEWAGON-MAIL_USE_TLS:latest,MAIL_USE_SSL=COURSEWAGON-MAIL_USE_SSL:latest,MAIL_DEFAULT_SENDER=COURSEWAGON-MAIL_DEFAULT_SENDER:latest,MAIL_CONTACT_EMAIL=COURSEWAGON-MAIL_CONTACT_EMAIL:latest,GCS_BUCKET_NAME=COURSEWAGON-GCS_BUCKET_NAME:latest,GCP_PROJECT_ID=COURSEWAGON-GCP_PROJECT_ID:latest,AZURE_STORAGE_ACCOUNT_NAME=COURSEWAGON-AZURE_STORAGE_ACCOUNT_NAME:latest,AZURE_STORAGE_CONNECTION_STRING=COURSEWAGON-AZURE_STORAGE_CONNECTION_STRING:latest,AZURE_STORAGE_CONTAINER_NAME=COURSEWAGON-AZURE_STORAGE_CONTAINER_NAME:latest,API_KEY=COURSEWAGON-API_KEY:latest,GEMINI_API_KEY=COURSEWAGON-GEMINI_API_KEY:latest,GEMINI_IMAGE_GENERATION_API_KEY=COURSEWAGON-GEMINI_IMAGE_GENERATION_API_KEY:latest,FIREBASE_PROJECT_ID=COURSEWAGON-FIREBASE_PROJECT_ID:latest,FIREBASE_CLIENT_EMAIL=COURSEWAGON-FIREBASE_CLIENT_EMAIL:latest,APP_NAME=COURSEWAGON-APP_NAME:latest,FRONTEND_URL=COURSEWAGON-FRONTEND_URL:latest,ENCRYPTION_KEY=COURSEWAGON-ENCRYPTION_KEY:latest,ENCRYPTION_SALT=COURSEWAGON-ENCRYPTION_SALT:latest,SECURITY_PASSWORD_SALT=COURSEWAGON-SECURITY_PASSWORD_SALT:latest,REDIS_HOST=COURSEWAGON-REDIS_HOST:latest,REDIS_PORT=COURSEWAGON-REDIS_PORT:latest,REDIS_DB=COURSEWAGON-REDIS_DB:latest,REDIS_PASSWORD=COURSEWAGON-REDIS_PASSWORD:latest"
